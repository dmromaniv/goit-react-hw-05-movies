{"version":3,"file":"static/js/913.865af4b4.chunk.js","mappings":"0LACA,EAAgC,8B,SCqBhC,EAjBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,aAIb,C,oHCnBD,EAAuB,wBAAvB,EAAsD,wB,SC6CtD,EAtCsB,WACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAeC,EAAAA,EAAAA,cACnB,kBAAMC,EAAAA,EAAAA,IAAqBJ,EAA3B,GACA,CAACA,IAGH,GAA2CK,EAAAA,EAAAA,GAAaH,GAA1CI,EAAd,EAAQC,KAAqBC,EAA7B,EAA6BA,UAE7B,OACE,gCACGA,IAAa,SAACC,EAAA,EAAD,IACbH,IACC,eAAIhB,UAAWC,EAAf,SACGe,EAAcI,KACb,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,GAA3C,OACE,gBAAIxB,UAAWC,EAAf,WACE,gBACEG,MAAM,MACNqB,IACEF,EAAY,yCAC0BA,GAClC,yGAENG,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeD,OAXeG,EADlC,QAoBX,C,8FC5CD,EAAgCG,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEZ,SAASd,EAAae,GAC3B,MAAwBD,EAAS,MAAjC,eAAOZ,EAAP,KAAac,EAAb,KACA,EAAsCF,EAAS,MAA/C,eAAOX,EAAP,KAAkBc,EAAlB,KAiBA,OAfAJ,GAAU,WACR,IAAMK,EAAO,mCAAG,oGAEZD,GAAiB,GAFL,SAGOF,IAHP,OAGNb,EAHM,OAIZc,EAAQd,GAJI,gDAMZiB,QAAQC,MAAR,MANY,yBAQZH,GAAiB,GARL,4EAAH,qDAWbC,GACD,GAAE,CAACH,IAEG,CAAEb,KAAAA,EAAMC,UAAAA,EAChB,C,+LClBM,SAAekB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAU,sBAAuB,CACtDC,OAAQ,CACNC,QAAS,sCAHR,uBACGtB,EADH,EACGA,KADH,kBAMEA,EAAKuB,SANP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCjB,GAAnC,yFACkBa,EAAAA,EAAAA,IAAA,iBAAoBb,GAAM,CAC/Cc,OAAQ,CACNC,QAAS,sCAHR,uBACGtB,EADH,EACGA,KADH,kBAMEA,GANF,kEASA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBN,EAAAA,EAAAA,IAAA,gBAA2B,CAChDC,OAAQ,CACNC,QAAS,mCACTK,MAAOD,KAJN,uBACG1B,EADH,EACGA,KADH,kBAOEA,EAAKuB,SAPP,kEAUA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAAoCU,GAApC,yFACkBa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,YAAkC,CACvDc,OAAQ,CACNC,QAAS,sCAHR,uBACGtB,EADH,EACGA,KADH,kBAMEA,EAAK4B,MANP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BtB,GAA9B,yFACkBa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,YAAkC,CACvDc,OAAQ,CACNC,QAAS,sCAHR,uBACGtB,EADH,EACGA,KADH,kBAMEA,EAAKuB,SANP,kEAvCPH,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx","hooks/useFetchData.jsx","services/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import React from 'react';\n\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport style from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={style.loaderWrapper}>\n      <MagnifyingGlass\n        visible={true}\n        height=\"100\"\n        width=\"100\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieCast_list__ZRqM9\",\"card\":\"MovieCast_card__-xs+a\"};","import React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Loader from 'components/Loader/Loader';\nimport { getMovieCastByFilmId } from 'services';\nimport { useFetchData } from 'hooks/useFetchData';\nimport style from './MovieCast.module.css';\n\nconst MovieCastList = () => {\n  const { movieId } = useParams();\n\n  const getMovieCast = useCallback(\n    () => getMovieCastByFilmId(movieId),\n    [movieId]\n  );\n\n  const { data: movieCastInfo, isLoading } = useFetchData(getMovieCast);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieCastInfo && (\n        <ul className={style.list}>\n          {movieCastInfo.map(\n            ({ character, original_name, profile_path, id }) => (\n              <li className={style.card} key={id}>\n                <img\n                  width=\"100\"\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : 'https://www.freeiconspng.com/thumbs/person-icon/name-people-person-user-icon--icon-search-engine-1.png'\n                  }\n                  alt={original_name}\n                />\n                <p>{original_name}</p>\n                <p>Character: {character}</p>\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MovieCastList;\n","const { useEffect, useState } = require('react');\n\nexport function useFetchData(callback) {\n  const [data, setData] = useState(null);\n  const [isLoading, setLoadingStatus] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoadingStatus(true);\n        const data = await callback();\n        setData(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoadingStatus(false);\n      }\n    };\n    getData();\n  }, [callback]);\n\n  return { data, isLoading };\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingFilms() {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.results;\n}\n\nexport async function getFilmInfoByFilmId(id) {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data;\n}\n\nexport async function getFilmsByTitle(title) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n      query: title,\n    },\n  });\n  return data.results;\n}\n\nexport async function getMovieCastByFilmId(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.cast;\n}\n\nexport async function getUserReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.results;\n}\n"],"names":["className","style","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","movieId","useParams","getMovieCast","useCallback","getMovieCastByFilmId","useFetchData","movieCastInfo","data","isLoading","Loader","map","character","original_name","profile_path","id","src","alt","require","useEffect","useState","callback","setData","setLoadingStatus","getData","console","error","getTrendingFilms","axios","params","api_key","results","getFilmInfoByFilmId","getFilmsByTitle","title","query","cast","getUserReviews"],"sourceRoot":""}