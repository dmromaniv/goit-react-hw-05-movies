{"version":3,"file":"static/js/415.98749770.chunk.js","mappings":"2KAyBA,IAtBkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACoB,IAAjBF,EAAMG,QACL,wBACGH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGI,KAFIC,EADA,OASb,wDAIP,C,0ECtBD,EAAgC,8B,SCqBhC,EAjBe,WACb,OACE,gBAAKI,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,aAIb,C,8FCpBD,EAAgCC,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEZ,SAASC,EAAaC,GAC3B,MAAwBF,EAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,EAAS,MAA/C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAP,GAAU,WACR,IAAMQ,EAAO,mCAAG,oGAEZD,GAAiB,GAFL,SAGOJ,IAHP,OAGNC,EAHM,OAIZC,EAAQD,GAJI,gDAMZK,QAAQC,MAAR,MANY,yBAQZH,GAAiB,GARL,4EAAH,qDAWbC,GACD,GAAE,CAACL,IAEG,CAAEC,KAAAA,EAAME,UAAAA,EAChB,C,qFCHD,UAZa,WACX,OAAmCJ,EAAAA,EAAAA,GAAaS,EAAAA,IAAlChC,EAAd,EAAQyB,KAAaE,EAArB,EAAqBA,UAErB,OACE,iCACE,2CACCA,IAAa,SAAC,IAAD,IACb3B,IAAS,SAAC,IAAD,CAAWA,MAAOA,MAGjC,C,+LCbM,SAAegC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAU,sBAAuB,CACtDC,OAAQ,CACNC,QAAS,sCAHR,uBACGV,EADH,EACGA,KADH,kBAMEA,EAAKW,SANP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmC/B,GAAnC,yFACkB2B,EAAAA,EAAAA,IAAA,iBAAoB3B,GAAM,CAC/C4B,OAAQ,CACNC,QAAS,sCAHR,uBACGV,EADH,EACGA,KADH,kBAMEA,GANF,kEASA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+BjC,GAA/B,yFACkB4B,EAAAA,EAAAA,IAAA,gBAA2B,CAChDC,OAAQ,CACNC,QAAS,mCACTI,MAAOlC,KAJN,uBACGoB,EADH,EACGA,KADH,kBAOEA,EAAKW,SAPP,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoClC,GAApC,yFACkB2B,EAAAA,EAAAA,IAAA,iBAAoB3B,EAApB,YAAkC,CACvD4B,OAAQ,CACNC,QAAS,sCAHR,uBACGV,EADH,EACGA,KADH,kBAMEA,EAAKgB,MANP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BpC,GAA9B,yFACkB2B,EAAAA,EAAAA,IAAA,iBAAoB3B,EAApB,YAAkC,CACvD4B,OAAQ,CACNC,QAAS,sCAHR,uBACGV,EADH,EACGA,KADH,kBAMEA,EAAKW,SANP,kEAvCPH,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/FilmsList/FilmsList.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","hooks/useFetchData.jsx","pages/Home.jsx","services/index.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst FilmsList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {films.length !== 0 ? (\n        <ul>\n          {films.map(({ title, id }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We did not find any movies.</p>\n      )}\n    </>\n  );\n};\n\nexport default FilmsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import React from 'react';\n\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport style from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={style.loaderWrapper}>\n      <MagnifyingGlass\n        visible={true}\n        height=\"100\"\n        width=\"100\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","const { useEffect, useState } = require('react');\n\nexport function useFetchData(callback) {\n  const [data, setData] = useState(null);\n  const [isLoading, setLoadingStatus] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoadingStatus(true);\n        const data = await callback();\n        setData(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoadingStatus(false);\n      }\n    };\n    getData();\n  }, [callback]);\n\n  return { data, isLoading };\n}\n","import React from 'react';\n\nimport FilmsList from 'components/FilmsList/FilmsList';\nimport Loader from 'components/Loader/Loader';\nimport { getTrendingFilms } from 'services';\nimport { useFetchData } from 'hooks/useFetchData';\n\nconst Home = () => {\n  const { data: films, isLoading } = useFetchData(getTrendingFilms);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {isLoading && <Loader />}\n      {films && <FilmsList films={films} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingFilms() {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.results;\n}\n\nexport async function getFilmInfoByFilmId(id) {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data;\n}\n\nexport async function getFilmsByTitle(title) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n      query: title,\n    },\n  });\n  return data.results;\n}\n\nexport async function getMovieCastByFilmId(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.cast;\n}\n\nexport async function getUserReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.results;\n}\n"],"names":["films","location","useLocation","length","map","title","id","to","state","from","className","style","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","require","useEffect","useState","useFetchData","callback","data","setData","isLoading","setLoadingStatus","getData","console","error","getTrendingFilms","axios","params","api_key","results","getFilmInfoByFilmId","getFilmsByTitle","query","getMovieCastByFilmId","cast","getUserReviews"],"sourceRoot":""}