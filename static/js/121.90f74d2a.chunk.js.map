{"version":3,"file":"static/js/121.90f74d2a.chunk.js","mappings":"0LACA,EAAgC,8B,SCqBhC,EAjBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,UAAU,0BACVC,aAAc,CAAC,EACfC,aAAa,0BACbC,WAAW,UACXC,MAAM,aAIb,C,2GCnBD,EAA6B,gC,kBCmC7B,EA3BoB,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAkBC,EAAAA,EAAAA,cAAY,kBAAMC,EAAAA,EAAAA,IAAeJ,EAArB,GAA+B,CAACA,IAEpE,GAA0CK,EAAAA,EAAAA,GAAaH,GAAzCI,EAAd,EAAQC,KAAoBC,EAA5B,EAA4BA,UAE5B,OAAIF,GAAwC,IAAxBA,EAAaG,QACxB,qEAGP,gCACGD,IAAa,SAACE,EAAA,EAAD,IACbJ,IACC,wBACGA,EAAaK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OAChB,2BACE,eAAGxB,UAAWC,EAAd,qBAAyCqB,MACzC,uBAAIE,MAFGD,EADO,QAU3B,C,8FClCD,EAAgCE,EAAQ,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEZ,SAASZ,EAAaa,GAC3B,MAAwBD,EAAS,MAAjC,eAAOV,EAAP,KAAaY,EAAb,KACA,EAAsCF,EAAS,MAA/C,eAAOT,EAAP,KAAkBY,EAAlB,KAiBA,OAfAJ,GAAU,WACR,IAAMK,EAAO,mCAAG,oGAEZD,GAAiB,GAFL,SAGOF,IAHP,OAGNX,EAHM,OAIZY,EAAQZ,GAJI,gDAMZe,QAAQC,MAAR,MANY,yBAQZH,GAAiB,GARL,4EAAH,qDAWbC,GACD,GAAE,CAACH,IAEG,CAAEX,KAAAA,EAAMC,UAAAA,EAChB,C,+LClBM,SAAegB,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAU,sBAAuB,CACtDC,OAAQ,CACNC,QAAS,sCAHR,uBACGpB,EADH,EACGA,KADH,kBAMEA,EAAKqB,SANP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmChB,GAAnC,yFACkBY,EAAAA,EAAAA,IAAA,iBAAoBZ,GAAM,CAC/Ca,OAAQ,CACNC,QAAS,sCAHR,uBACGpB,EADH,EACGA,KADH,kBAMEA,GANF,kEASA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBN,EAAAA,EAAAA,IAAA,gBAA2B,CAChDC,OAAQ,CACNC,QAAS,mCACTK,MAAOD,KAJN,uBACGxB,EADH,EACGA,KADH,kBAOEA,EAAKqB,SAPP,kEAUA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAoCpB,GAApC,yFACkBY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,YAAkC,CACvDa,OAAQ,CACNC,QAAS,sCAHR,uBACGpB,EADH,EACGA,KADH,kBAMEA,EAAK2B,MANP,kEASA,SAAe9B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BS,GAA9B,yFACkBY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,YAAkC,CACvDa,OAAQ,CACNC,QAAS,sCAHR,uBACGpB,EADH,EACGA,KADH,kBAMEA,EAAKqB,SANP,kEAvCPH,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MovieReview/MovieReview.module.css?ccdf","components/MovieReview/MovieReview.jsx","hooks/useFetchData.jsx","services/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import React from 'react';\n\nimport { MagnifyingGlass } from 'react-loader-spinner';\nimport style from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={style.loaderWrapper}>\n      <MagnifyingGlass\n        visible={true}\n        height=\"100\"\n        width=\"100\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"authorName\":\"MovieReview_authorName__qJ7HD\"};","import React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useFetchData } from 'hooks/useFetchData';\nimport { getUserReviews } from 'services';\n\nimport style from './MovieReview.module.css';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieReview = () => {\n  const { movieId } = useParams();\n\n  const getMovieReviews = useCallback(() => getUserReviews(movieId), [movieId]);\n\n  const { data: movieReviews, isLoading } = useFetchData(getMovieReviews);\n\n  if (movieReviews && movieReviews.length === 0) {\n    return <p>We don`t have any reviews for this movie</p>;\n  }\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieReviews && (\n        <ul>\n          {movieReviews.map(({ author, id, content }) => (\n            <li key={id}>\n              <p className={style.authorName}>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MovieReview;\n","const { useEffect, useState } = require('react');\n\nexport function useFetchData(callback) {\n  const [data, setData] = useState(null);\n  const [isLoading, setLoadingStatus] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoadingStatus(true);\n        const data = await callback();\n        setData(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoadingStatus(false);\n      }\n    };\n    getData();\n  }, [callback]);\n\n  return { data, isLoading };\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingFilms() {\n  const { data } = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.results;\n}\n\nexport async function getFilmInfoByFilmId(id) {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data;\n}\n\nexport async function getFilmsByTitle(title) {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n      query: title,\n    },\n  });\n  return data.results;\n}\n\nexport async function getMovieCastByFilmId(id) {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.cast;\n}\n\nexport async function getUserReviews(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: 'b72b31e819ea439a1f54ca720299786f',\n    },\n  });\n  return data.results;\n}\n"],"names":["className","style","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","movieId","useParams","getMovieReviews","useCallback","getUserReviews","useFetchData","movieReviews","data","isLoading","length","Loader","map","author","id","content","require","useEffect","useState","callback","setData","setLoadingStatus","getData","console","error","getTrendingFilms","axios","params","api_key","results","getFilmInfoByFilmId","getFilmsByTitle","title","query","getMovieCastByFilmId","cast"],"sourceRoot":""}